name: Deploy to GitHub Pages

on:
  push:
    branches: ["main"]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: pages
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@v4

      - id: pm
        name: Detect PM
        run: |
          if [[ -f pnpm-lock.yaml ]]; then
            echo "pm=pnpm" >> "$GITHUB_OUTPUT"
          elif [[ -f yarn.lock ]]; then
            echo "pm=yarn" >> "$GITHUB_OUTPUT"
          else
            echo "pm=npm" >> "$GITHUB_OUTPUT"
          fi

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: ${{ steps.pm.outputs.pm }}

      - name: Install deps
        run: |
          PM="${{ steps.pm.outputs.pm }}"
          if [[ "$PM" == "pnpm" ]]; then
            npm i -g pnpm@9
            pnpm install --frozen-lockfile
          elif [[ "$PM" == "yarn" ]]; then
            if [[ -f yarn.lock ]]; then yarn install --frozen-lockfile; else yarn install; fi
          else
            if [[ -f package-lock.json ]]; then npm ci --no-audit --no-fund; else npm i --no-audit --no-fund; fi
          fi

      - id: base
        name: Compute BASE_PATH
        run: |
          REPO="${{ github.event.repository.name }}"
          OWNER="${{ github.repository_owner }}"
          if [[ "$REPO" == "$OWNER.github.io" ]]; then
            echo "value=/" >> "$GITHUB_OUTPUT"
          else
            echo "value=/$REPO/" >> "$GITHUB_OUTPUT"
          fi

      - name: Build
        env:
          BASE_PATH: ${{ steps.base.outputs.value }}
        run: |
          PM="${{ steps.pm.outputs.pm }}"
          if [[ "$PM" == "pnpm" ]]; then
            pnpm run build -- --base "$BASE_PATH"
          elif [[ "$PM" == "yarn" ]]; then
            yarn build --base "$BASE_PATH"
          else
            npm run build -- --base "$BASE_PATH"
          fi

      - name: Ensure static 404
        run: |
          if [[ ! -f dist/404.html ]]; then
            cat > dist/404.html <<'HTML'
<!doctype html><html lang="en"><meta charset="utf-8"><meta name="viewport" content="width=device-width,initial-scale=1"><title>404 â€” Not Found</title><style>html,body{height:100%;margin:0;background:#0d1117;color:#e6edf3;display:grid;place-items:center;font:16px/1.5 ui-sans-serif,system-ui;-webkit-font-smoothing:antialiased;}</style><body><main><h1>404</h1><p>Page not found.</p></main></body></html>
HTML
          fi
          if grep -E '<script[^>]+src=.*/assets/js/' dist/404.html >/dev/null 2>&1; then
            echo "dist/404.html must be static (no app bundle)"; exit 1
          fi

      - name: Copy extra files
        run: |
          [[ -f CNAME ]] && cp CNAME dist/CNAME
          [[ -f public/CNAME ]] && cp public/CNAME dist/CNAME
          [[ -f public/_headers ]] && cp public/_headers dist/_headers
          [[ -f public/_redirects ]] && cp public/_redirects dist/_redirects

      - uses: actions/upload-pages-artifact@v3
        with:
          path: dist

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - id: deployment
        uses: actions/deploy-pages@v4
